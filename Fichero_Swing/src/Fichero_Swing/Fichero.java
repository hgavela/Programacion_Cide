/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fichero_Swing;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author alumne-DAM
 */
public class Fichero extends javax.swing.JFrame {

    /**
     * Creates new form Fichero
     */
    public Fichero() {
        initComponents();
        
    }
    String ruta;
    File fichero = null;
    FileReader fr = null;
    FileWriter fw = null;
    BufferedReader br = null;
    BufferedWriter bw = null;
    ArrayList<String> lista = new ArrayList<>();
    
    
     private static String PillarExtension(String file) {
        
        if(file.lastIndexOf(".") != -1 && file.lastIndexOf(".") != 0)
        return file.substring(file.lastIndexOf(".")+1);
        else return "";
    }
    
     //Metodo que se encarga de Cargar leer el fichero y mostrarlo por pantalla
     private void CargarFichero (File archivo){
         String linea;
         try{
         fr = new FileReader (archivo);
         br = new BufferedReader(fr);
         //Leemos fichero y mostramos por pantalla
         while((linea=br.readLine())!=null){
           
            TextAreaDebug.setText(TextAreaDebug.getText()+(linea)+"\n");
            }
         } catch (Exception e) {
            FileReader fr = null;
            BufferedReader br = null;
         }
         finally{
         try{
            if( null != fr ){
               fr.close();
            }
         }catch (Exception e2){
            e2.printStackTrace();
         }
      }
         }
     
     //Metodo que se encarga de leer el fichero, escribir Hugo al inicio de este y sobreescribir el fichero
     private void ModificarFichero () throws IOException{
         TextAreaDebug.setText("");
         try{
         br =new BufferedReader(new FileReader(this.fichero));
         //Leemos el contenido del fichero   
         String line = br.readLine();
         while (line != null){
             lista.add(line);
             line =br.readLine();
         }
         System.out.println(lista);
         //AÃ±adimos Hugo al inicio del contenido.
         lista.add(0, "Hugo");
         System.out.println(lista.size());
         bw = new BufferedWriter(new FileWriter(this.fichero));
         
          //Pasa por cada linea de ArrayList y lo guarda en br y muestra por pantalla
          for (int x=0;x<lista.size();x++){
                TextAreaDebug.setText(TextAreaDebug.getText()+ lista.get(x)+ "\n");
                bw.write (lista.get(x));
                bw.newLine();
          }
          
         System.out.println(lista);
         //Limpiamos la arrayList para que no se almacene
         lista.clear();
         }catch (IOException e) {
          System.out.println("S'ha trobat un error llegint el fitxer especificat: "+e.getMessage());
       } finally {
          if (null!=br) {
             br.close();
             bw.close();
          }
         }
     }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelPrincipal = new javax.swing.JPanel();
        LabelRuta = new javax.swing.JLabel();
        FieldRuta = new javax.swing.JTextField();
        PanelOpciones = new javax.swing.JPanel();
        ButtonModificar = new javax.swing.JButton();
        ButtonReset = new javax.swing.JButton();
        ButtonCargar = new javax.swing.JButton();
        PanelDebug = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaDebug = new javax.swing.JTextArea();
        ButtonResetDebug = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CIDE FILE EDITOR");
        setResizable(false);

        PanelPrincipal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        LabelRuta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelRuta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelRuta.setText("Ruta Fichero:");

        FieldRuta.setBackground(new java.awt.Color(255, 255, 255));
        FieldRuta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        FieldRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldRutaActionPerformed(evt);
            }
        });

        PanelOpciones.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Opciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        ButtonModificar.setText("Modificar");
        ButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonModificarActionPerformed(evt);
            }
        });

        ButtonReset.setText("Reset");
        ButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonResetActionPerformed(evt);
            }
        });

        ButtonCargar.setText("Cargar");
        ButtonCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
        PanelOpciones.setLayout(PanelOpcionesLayout);
        PanelOpcionesLayout.setHorizontalGroup(
            PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(ButtonCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelOpcionesLayout.setVerticalGroup(
            PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOpcionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(ButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        PanelDebug.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        TextAreaDebug.setColumns(20);
        TextAreaDebug.setRows(5);
        jScrollPane1.setViewportView(TextAreaDebug);

        javax.swing.GroupLayout PanelDebugLayout = new javax.swing.GroupLayout(PanelDebug);
        PanelDebug.setLayout(PanelDebugLayout);
        PanelDebugLayout.setHorizontalGroup(
            PanelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDebugLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        PanelDebugLayout.setVerticalGroup(
            PanelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDebugLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );

        ButtonResetDebug.setText("Reset debug");
        ButtonResetDebug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonResetDebugActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(LabelRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FieldRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelOpciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelDebug, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonResetDebug, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(FieldRuta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PanelDebug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonResetDebug, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FieldRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldRutaActionPerformed
    
    private void ButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonResetActionPerformed
        // Boton que elimina el path
        FieldRuta.setText("");
        TextAreaDebug.setText(TextAreaDebug.getText()+"Ruta reseteada\n");
    }//GEN-LAST:event_ButtonResetActionPerformed

    private void ButtonCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCargarActionPerformed
        // Boton de cargar
        ruta =FieldRuta.getText();
        //Comprobamos que la ruta contiene un .txt al final
        if (PillarExtension(ruta).equals("txt")){
            fichero = new File(ruta);
        } else {
            TextAreaDebug.setText(TextAreaDebug.getText()+"No es un archivo de tipo txt\n");
        }
        //Comporbamos que la ruta pertenece a un fichero
        if (fichero.isFile()){
            TextAreaDebug.setText(TextAreaDebug.getText()+"Archivo cargado correctamente\n");
            CargarFichero(fichero);
        } else {
            TextAreaDebug.setText(TextAreaDebug.getText()+"La ruta no pertenece a un archivo\n");
        }
    }//GEN-LAST:event_ButtonCargarActionPerformed

    private void ButtonResetDebugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonResetDebugActionPerformed
        // Boton que resetea el contenido del debug
        TextAreaDebug.setText("");
    }//GEN-LAST:event_ButtonResetDebugActionPerformed

    private void ButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonModificarActionPerformed
        //Boton que modificar el archivo invocando el metodo ModificarFichero.
        try {
            ModificarFichero();
            TextAreaDebug.setText(TextAreaDebug.getText()+"Archivo Modificado Correcatemente\n");
        } catch (IOException ex) {
            Logger.getLogger(Fichero.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fichero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fichero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fichero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fichero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fichero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCargar;
    private javax.swing.JButton ButtonModificar;
    private javax.swing.JButton ButtonReset;
    private javax.swing.JButton ButtonResetDebug;
    private javax.swing.JTextField FieldRuta;
    private javax.swing.JLabel LabelRuta;
    private javax.swing.JPanel PanelDebug;
    private javax.swing.JPanel PanelOpciones;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JTextArea TextAreaDebug;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
